{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbac8e17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Mia Malkova\",\r\n        email: \"mia@gmail.com\",\r\n        phone: \"111-111-1111\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Alexa Grace\",\r\n        email: \"alexa@gmail.com\",\r\n        phone: \"222-222-2222\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Tori Black\",\r\n        email: \"tori@gmail.com\",\r\n        phone: \"333-333-3333\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control\", \"form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"cardheader\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Please enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    errors={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Please enter Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    errors={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Please enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    errors={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"cardheader\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Please enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    errors={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Please enter Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    errors={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Please enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    errors={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\">Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\">Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\">About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <text className=\"secondary\">1.0.0</text>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\" />\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test/\" component={Test} />{\" \"}\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}